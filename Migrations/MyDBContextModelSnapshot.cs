// <auto-generated />
using System;
using MercuryShopping.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MercuryShopping.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MercuryShopping.Models.Tables.Admin", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserName");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Catagory", b =>
                {
                    b.Property<int>("CatagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatagID"));

                    b.Property<string>("CatagName")
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CatagID");

                    b.ToTable("Catagory");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Customer", b =>
                {
                    b.Property<int>("CustID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustID"));

                    b.Property<string>("CustImg")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CustStatus")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.OrderDetails", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProID")
                        .HasColumnType("int");

                    b.Property<double>("ProTotal")
                        .HasColumnType("float");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("OrderID", "ProID");

                    b.HasIndex("ProID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Orders", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CustID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Product", b =>
                {
                    b.Property<int>("ProID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProID"));

                    b.Property<double?>("AvgRating")
                        .HasColumnType("float");

                    b.Property<int>("CatagID")
                        .HasColumnType("int");

                    b.Property<string>("Img1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumOfReviews")
                        .HasColumnType("int");

                    b.Property<string>("ProDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ProStatus")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<double>("UPrice")
                        .HasColumnType("float");

                    b.HasKey("ProID");

                    b.HasIndex("CatagID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Reviews", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CustID")
                        .HasColumnType("int");

                    b.Property<int>("ProID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.HasIndex("CustID");

                    b.HasIndex("ProID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.OrderDetails", b =>
                {
                    b.HasOne("MercuryShopping.Models.Tables.Orders", "Orders")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MercuryShopping.Models.Tables.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Product", b =>
                {
                    b.HasOne("MercuryShopping.Models.Tables.Catagory", "Catagory")
                        .WithMany("Products")
                        .HasForeignKey("CatagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catagory");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Reviews", b =>
                {
                    b.HasOne("MercuryShopping.Models.Tables.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MercuryShopping.Models.Tables.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Catagory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Customer", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Orders", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("MercuryShopping.Models.Tables.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
